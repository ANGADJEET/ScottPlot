@page "/"
@using ScottPlot;
@using ScottPlot.Blazor;
@using ScottPlotCookbook;
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@inject IWebAssemblyHostEnvironment HostEnvironment

<style>
    body {
        margin: 0;
    }

    .sidebar {
        background-color: #67217a;
        color: white;
        position: fixed;
        top: 0;
        height: 100%;
        width: 300px;
    }

    .sidebar-inner {
        height: 100%;
        width: 100%;
        margin: 0px;
        overflow-y: scroll;
        overflow-x: scroll;
    }

    .sidebar-button {
        color: #FFFFFF99;
        cursor: pointer;
        padding-left: .5rem;
    }

        .sidebar-button :hover {
            color: #FFFFFFEE;
            background-color: #FFFFFF11;
        }

    .sidebar h1 {
        font-size: 1.2em;
        margin: 1rem 1em .3rem .5rem;
    }

    main {
        display: block !important;
        margin-left: 300px;
    }
</style>

<nav class="sidebar">
    <div class="sidebar-inner">

        <h1>ScottPlot Blazor Demo</h1>
        
        <hr />

        @foreach (ICategory category in RecipesByCategory.Keys)
        {
            <h1>@category.CategoryName</h1>

            @foreach (IRecipe recipe in RecipesByCategory[category])
            {
                <div class="sidebar-button" @onclick="() => ShowRecipe(recipe)">
                    <div>
                        <a>@recipe.Name</a>
                    </div>
                </div>
            }
        }
    </div>
</nav>

<main>
    @if (Recipe is not null)
    {
        <div class="p-3">
            <div class="fs-3">@Recipe.Name</div>
            <div>@Recipe.Description</div>
        </div>
        <BlazorPlot @ref=BlazorPlot Style="width: min(100%, 800px); height: 600px;" />
    }
    <div class="text-muted p-4" style="margin-top: 10rem;">
        @ScottPlot.Version.LongString Running on .NET @Environment.Version
    </div>
</main>

@code {
    readonly Dictionary<ICategory, IEnumerable<IRecipe>> RecipesByCategory = ScottPlotCookbook.Query.GetRecipesByCategory();

    BlazorPlot BlazorPlot { get; set; } = new();

    IRecipe? Recipe;

    void ShowRecipe(IRecipe recipe)
    {
        Recipe = recipe;
        BlazorPlot.Reset();
        recipe.Execute(BlazorPlot.Plot);
        BlazorPlot.Refresh();
    }
}

