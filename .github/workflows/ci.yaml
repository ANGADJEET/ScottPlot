# This workflow tests all code after any change to the main branch

name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - src/**

env:
  DOTNET_VERSION: "8.0.x"

jobs:
  test-linux:
    strategy:
      matrix:
        include:
          - VERSION_NAME: "ScottPlot 4"
            TEST_PROJECT: "src/ScottPlot4/ScottPlot.Tests/ScottPlot.Tests.csproj"
          - VERSION_NAME: "ScottPlot 5"
            TEST_PROJECT: "src/ScottPlot5/ScottPlot5 Tests/ScottPlot Tests.csproj"
    name: Test ${{ matrix.VERSION_NAME }}
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3
      - name: ✨ Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: 🚚 Restore
        run: dotnet restore "${{ matrix.TEST_PROJECT }}"
      - name: 🛠️ Build
        run: dotnet build "${{ matrix.TEST_PROJECT }}" --configuration Release --no-restore
      - name: 🧪 Test
        run: dotnet test "${{ matrix.TEST_PROJECT }}" --configuration Release --no-restore --verbosity minimal

  test-windows:
    needs: [test-linux]
    strategy:
      matrix:
        include:
          - VERSION_NAME: "ScottPlot 4"
            FULL_SOLUTION: "src/ScottPlot4/ScottPlot4.sln"
            INSTALL_WORKLOADS: false
          - VERSION_NAME: "ScottPlot 5"
            FULL_SOLUTION: "src/ScottPlot5/ScottPlot5.sln"
            INSTALL_WORKLOADS: true
    name: Build ${{ matrix.VERSION_NAME }}
    runs-on: windows-latest
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: 🐢 Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
      - name: ✨ Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: ✨ Setup Java 17
        if: ${{ matrix.INSTALL_WORKLOADS }}
        uses: actions/setup-java@v3
        with:
          distribution: "microsoft"
          java-version: "17"
      - name: 🚚 Install Additional Workloads
        if: ${{ matrix.INSTALL_WORKLOADS }}
        run: dotnet workload install maui-android maui-ios maccatalyst wasm-tools
      - name: 🚚 Workload Restore
        if: ${{ matrix.INSTALL_WORKLOADS }}
        run: dotnet workload restore "${{ matrix.FULL_SOLUTION }}"
      - name: 🚚 Full Restore
        run: dotnet restore "${{ matrix.FULL_SOLUTION }}"
      - name: 🛠️ Full Build
        run: dotnet build "${{ matrix.FULL_SOLUTION }}" --configuration Release
      - name: ✍️ Autoformat
        run: dotnet format "${{ matrix.FULL_SOLUTION }}"
      - name: 🚀 Push Formatting Changes
        run: |
          git config --global user.name 'Scott W Harden (via GitHub Actions)'
          git config --global user.email 'swharden@gmail.com'
          git pull
          git commit -am "CI: autoformat"
          git push

  changelog:
    needs: [test-linux, test-windows]
    runs-on: ubuntu-latest
    name: Update Changelog Webpage
    steps:
      - name: 🚀 Trigger Remote Workflow
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -d "{\"ref\":\"main\"}" \
            https://api.github.com/repos/ScottPlot/ScottPlot.NET/actions/workflows/changelog.yaml/dispatches

  code-analysis:
    needs: [test-linux, test-windows]
    runs-on: ubuntu-latest
    name: Code Metrics
    steps:
      - name: 🛒 Checkout
        uses: actions/checkout@v3
      - name: ✨ Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: 🧪 Run Code Analysis
        run: dotnet run dotnet run --project dev/CodeAnalysis
      - name: 🔐 Create Key File
        run: install -m 600 -D /dev/null ~/.ssh/id_rsa
      - name: 🔑 Populate Key
        run: echo "${{ secrets.PRIVATE_SSH_KEY }}" > ~/.ssh/id_rsa
      - name: 🚀 Deploy Webpage
        run: rsync -e 'ssh -p 18765 -o StrictHostKeyChecking=no' 'dev/www/metrics/index.html' 'scottplot.net@ssh.scottplot.net:/home/customer/www/scottplot.net/public_html/metrics/index.html'
      - name: 🧹 Clear Cache
        run: ssh scottplot.net@ssh.scottplot.net -p 18765 "site-tools-client domain update id=1 flush_cache=1"
